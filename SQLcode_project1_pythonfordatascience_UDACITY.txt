/* Query 1 - query used for first insight */
SELECT category_name, SUM(t1.counting)
FROM (SELECT f.title film_title, 
	     c.name category_name,
	     COUNT(r.*) counting  
      FROM category c
      JOIN film_category fc
      ON c.category_id = fc.category_id
      JOIN film f
      ON f.film_id = fc.film_id
      JOIN inventory i
      ON i.film_id = f.film_id
      JOIN rental r
      ON i.inventory_id = r.inventory_id
      WHERE c.name in ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
      GROUP BY 1, 2
      ORDER BY 2, 1)t1
GROUP BY category_name

/* Query 2 - query used for second insight */
SELECT f.title film_title,
       c.name category,
       f.rental_duration rental_duration,
       NTILE(4) OVER (ORDER BY f.rental_duration) AS quartile
FROM category c
JOIN film_category fc
ON c.category_id = fc.category_id
JOIN film f
ON f.film_id = fc.film_id
WHERE c.name in ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')

/* Query 3 - query used for third insight */
SELECT DATE_PART('month', t1.rental_date) AS rental_month, 
       DATE_PART('year', t1.rental_date) AS rental_year,
       t1.store_id store_id,
       SUM(t1.count_rental) counting_rental
FROM (SELECT r.rental_date rental_date,
             st.store_id store_id,
             COUNT(r.*) count_rental
      FROM rental r
      JOIN payment p
      ON r.rental_id = p.rental_id
      JOIN staff s
      ON p.staff_id = s.staff_id
      JOIN store st
      ON st.store_id = s.store_id
      GROUP BY 1,2)t1
GROUP BY 3,1,2
ORDER BY 4 DESC

/* Query 4 - query used for forth insight */
SELECT DATE_TRUNC('month', p.payment_date) AS month_date,
       CONCAT(c.first_name, ' ', c.last_name) AS full_name,
       COUNT(*) count_per_month,
       SUM(p.amount) total_amount
FROM payment p
JOIN customer c
ON p.customer_id = c.customer_id
GROUP BY 1,2
HAVING CONCAT(c.first_name, ' ', c.last_name) in (SELECT t1.complete_name 
				                  FROM (SELECT CONCAT(d.first_name, ' ', d.last_name) AS complete_name,
	                                                SUM(p.amount) total_amount
                                                        FROM payment p
                                                        JOIN customer d
                                                        ON p.customer_id = d.customer_id
                                                        GROUP BY 1
                                                        ORDER BY 2 DESC
                                                        LIMIT 10)t1)
ORDER BY 2,1

